name: Self Assign
on:
  issue_comment:
    types: [created]

jobs:
  self-assign:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            async function handleSelfAssign() {
              const comment = context.payload.comment;
              const issueNumber = context.payload.issue.number;
              const commentUser = comment.user.login;
              
              // Check if comment is a self-assign command
              const words = comment.body.trim().split(/\s+/);
              const command = words[0].toLowerCase();
              
              if (!['/assign', '/take'].includes(command)) {
                return;
              }
              
              // If a username is specified, check if it matches commenter
              if (words.length > 1) {
                const targetUser = words[1].replace(/^@/, '');
                if (targetUser !== commentUser) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    body: `@${commentUser} You can only self-assign issues. Use \`${command}\` without a username.`
                  });
                  return;
                }
              }
              
              try {
                if (command === '/take') {
                  // Remove all assignees by setting assignees to an empty array
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber,
                    assignees: []
                  });
                }
                
                // Assign the issue
                await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  assignees: [commentUser]
                });
                
                const message = command === '/take' 
                  ? `@${commentUser} has taken this issue and is now the sole assignee.`
                  : `@${commentUser} has been assigned to this issue.`;
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: message
                });
              } catch (error) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: `Sorry @${commentUser}, there was an error processing your request: ${error.message}`
                });
              }
            }
            
            await handleSelfAssign();