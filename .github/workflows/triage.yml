# .github/workflows/triage.yml
name: Issue Triage Workflow
on:
  issues:
    types: [opened, labeled, unlabeled, reopened]
  issue_comment:
    types: [created]

jobs:
  triage:
    runs-on: ubuntu-latest
    if: github.event.issue.state == 'open'
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const REQUIRED_VOTES = 1;  // Number of votes needed to confirm triage
            const TRIAGE_TEAM = 'issue-triagers-label-based'
            
            async function processTriageVotes(context, github) {
              const issue = context.payload.issue;
              
              // Check for triage comments
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
              });
              
              // Count votes using reactions on the issue
              const reactions = await github.rest.reactions.listForIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
              });
              
              // Count "+1" reactions from triage team members
              const triageVotes = reactions.data.filter(reaction => 
                reaction.content === '+1' && 
                TRIAGE_TEAM.includes(reaction.user.login)
              ).length;
              
              // If we have enough votes, apply confirmed labels
              if (triageVotes >= REQUIRED_VOTES) {
                // Remove needs-triage label
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  name: 'needs-triage'
                }).catch(e => {
                  // Label might not exist, ignore error
                });
                
                // Add triaged label
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: ['triaged']
                });
                
                // Comment about triage completion
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: 'Issue has been triaged by the community. Thank you for your contributions!'
                });
              }
            }
            
            // Run the triage process
            await processTriageVotes(context, github);
